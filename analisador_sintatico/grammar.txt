PROG      -> DECL_VAR CONST FUNCOES MAIN
DECL_VAR  -> TIPO id; DECL_VAR | e
CONST     -> const id = NUM; CONST | e
FUNCOES   -> FUNCAO FUNCOES | e
FUNCAO    -> TIPO id(){ DECL_VAR CMDS return id;}
MAIN      -> main {DECL_VAR CMDS}
TIPO      -> int | float | char | string
NUM       -> NUM_INT | NUM_FLOAT
NUM_INT   -> DIGITO NUM_INT | DIGITO e
NUM_FLOAT -> NUM_INT . NUM_INT
CMDS      -> CMD CMDS | CMD e
CMD       -> IF | WHILE | FOR | ATR | INCR; | CH_FUNC
IF        -> if(TESTE){CMDS} | if(TESTE){CMDS}else{CMDS}
WHILE     -> while(TESTE){CMDS}
FOR       -> for(ATR_FOR; TESTE; INCR){CMDS}
ATR       -> id = NUM; | id = EXPR_MAT; | id = ch; | id = string; | id = CH_FUNC; | id = id;
CH_FUNC   -> id();
INCR      -> id++ | id--
ATR_FOR   -> id = NUM
EXPR_MAT  -> NUM OP_ARIT NUM | id OP_ARIT id | id OP_ARIT NUM | NUM OP_ARIT id
TESTE     -> EXPR_REL | EXPR_REL OP_LOG TESTE
EXPR_REL  -> id OP_REL id | id OP_REL NUM | NUM OP_REL id | NUM OP_REL NUM
OP_REL    -> == | > | < | >= | <= | !=
OP_LOG    -> && | ||
